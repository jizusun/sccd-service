*** Settings ***
Library           SeleniumLibrary
Library           String

*** Variables ***
@{DEV}            https://supportshell-dgq5qdz5dm.dispatcher.int.sap.eu2.hana.ondemand.com/    S0000315119    Sapsap123@
@{TEST}           https://supportshell-tnxd3nxr8c.dispatcher.int.sap.eu2.hana.ondemand.com/    S0000364688    Sapsap123@
@{QUAL}           https://supportshell-q28pq0r93n.dispatcher.int.sap.eu2.hana.ondemand.com/    S0000315119    Sapsap123@
@{CANARY}         https://supportshell-p949rs36bi.dispatcher.int.sap.eu2.hana.ondemand.com/    S0006211344    Sa-Bine7
@{PROD}           https://launchpad.support.sap.com/    S0000315119    Sapsap123!
${ENV_USER}       ${EMPTY}
@{ENVIRONMENT}
@{BCD}            https://bcdmain.wdf.sap.corp/sap(bD1lbiZjPTAwMSZkPW1pbg==)/bc/bsp/sap/crm_ui_start/default.htm
@{BCT}            https://bct.wdf.sap.corp/sap(bD1lbiZjPTAwMSZkPW1pbg==)/bc/bsp/sap/crm_ui_start/default.htm
@{BCP}            https://support.wdf.sap.corp/sap(bD1lbiZjPTAwMSZkPW1pbg==)/bc/bsp/sap/crm_ui_start/default.htm

*** Keywords ***
Wait until element clickable and click
    [Arguments]    ${locator}    ${time_out}=90s
    Wait Until Element Is Visible    ${locator}    ${time_out}
    Comment    Wait Until Element Is Enabled    ${locator}    ${time_out}
    Execute JavaScript    window.scrollTo(0, document.body.scrollHeight)
    Click Element    ${locator}
    Sleep    3s

Wait until element enabled and type text
    [Arguments]    ${locator}    ${text}
    Comment    Execute JavaScript    window.scrollTo(0, document.body.scrollHeight)
    Wait Until Element Is Enabled    ${locator}    timeout=300s
    Wait Until Element Is Visible    ${locator}    timeout=300s
    Input Text    ${locator}    ${text}
    Sleep    3s

Login in Launchpad
    Set launchpad environment
    Open Browser    @{ENVIRONMENT}[0]    ${BROWSER}
    Set Window Size    1600    900
    Wait until element enabled and type text    id=j_username    @{ENVIRONMENT}[1]
    Wait until element enabled and type text    id=j_password    @{ENVIRONMENT}[2]
    Click Button    id=logOnFormSubmit
    ${dialog}=    Run Keyword And Return Status    Element Should Be Visible    css=[id$=terms]
    Run Keyword If    '${dialog}'=='True'    Wait until element clickable and click    //footer[contains(@id,"terms-footer")]//button[1]

Should display step1
    Select Frame    __frame0
    Wait Until Element Is Visible    step1    timeout=60s
    Unselect Frame

Log out
    Close Browser

Set launchpad environment
    Run Keyword If    '${ENV_USER}'=='DEV'    Set environment value    @{DEV}
    ...    ELSE IF    '${ENV_USER}'=='TEST'    Set environment value    @{TEST}
    ...    ELSE IF    '${ENV_USER}'=='PROD'    Set environment value    @{PROD}
    ...    ELSE IF    '${ENV_USER}'=='QUAL'    Set environment value    @{QUAL}
    ...    ELSE IF    '${ENV_USER}'=='CANARY'    Set environment value    @{CANARY}

Set environment value
    [Arguments]    @{env}
    Set Suite Variable    @{ENVIRONMENT}    @{TEST}
    [Teardown]

Login in BC
    Set BC environment
    Open Browser    @{ENVIRONMENT}[0]    chrome
    Set Window Size    1600    900
    Comment    Maximize Browser Window
    Wait until element clickable and click    css=a[title=ZCSSNEXTPROC]

Set BC environment
    Run Keyword If    '${ENV_USER}'=='DEV'    Set environment value    @{BCD}
    ...    ELSE IF    '${ENV_USER}'=='TEST'    Set environment value    @{BCT}
    ...    ELSE IF    '${ENV_USER}'=='PROD'    Set environment value    @{BCP}

Import OPA
    Execute Javascript    sap.ui.define(['sap/ui/test/_opaCorePlugin'], function(_opaCorePlugin) { \ \ \ \ "use strict"; \ \ \ \ \ window.fnGetControlByGlobalId = function(oOptions) { \ \ \ \ \ \ \ \ var vStringOrArrayOrRegex = oOptions.id \ \ \ \ \ \ \ \ \ \ , vControl = [] \ \ \ \ \ \ \ \ \ \ , aIds = [] \ \ \ \ \ \ \ \ \ \ , oCoreElements = _opaCorePlugin.getCoreElements(); \ \ \ \ \ \ \ \ \ if (typeof vStringOrArrayOrRegex === "string") { \ \ \ \ \ \ \ \ \ \ \ \ vControl = oCoreElements[vStringOrArrayOrRegex]; \ \ \ \ \ \ \ \ \ \ \ \ \ if (!vControl) { \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ this._oLogger.debug("Found no control with the global id: '" + vStringOrArrayOrRegex + "'"); \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return null; \ \ \ \ \ \ \ \ \ \ \ \ } \ \ \ \ \ \ \ \ \ \ \ \ \ if (!_opaCorePlugin.checkControlType(vControl, oOptions.controlType)) { \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ this._oLogger.error("An id: '" + oOptions.id + "' was passed together with the controlType '" + oOptions.sOriginalControlType + "' but the type does not match the control retrieved: '" + vControl + "' - null is returned"); \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return null; \ \ \ \ \ \ \ \ \ \ \ \ } \ \ \ \ \ \ \ \ \ \ \ \ \ return vControl; \ \ \ \ \ \ \ \ } \ \ \ \ \ \ \ \ \ if ($.type(vStringOrArrayOrRegex) === "regexp") { \ \ \ \ \ \ \ \ \ \ \ \ \ //Performance critical \ \ \ \ \ \ \ \ \ \ \ \ for (var sPropertyName in oCoreElements) { \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if (!oCoreElements.hasOwnProperty(sPropertyName)) { \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ continue; \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ } \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if (!vStringOrArrayOrRegex.test(sPropertyName)) { \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ continue; \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ } \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ aIds.push(sPropertyName); \ \ \ \ \ \ \ \ \ \ \ \ } \ \ \ \ \ \ \ \ \ } else if ($.isArray(vStringOrArrayOrRegex)) { \ \ \ \ \ \ \ \ \ \ \ \ aIds = vStringOrArrayOrRegex; \ \ \ \ \ \ \ \ } \ \ \ \ \ \ \ \ \ return aIds.map(function(sId) { \ \ \ \ \ \ \ \ \ \ \ \ return oCoreElements[sId]; \ \ \ \ \ \ \ \ }).filter(function(oControl) { \ \ \ \ \ \ \ \ \ \ \ \ //only return defined controls \ \ \ \ \ \ \ \ \ \ \ \ return _opaCorePlugin.checkControlType(oControl, oOptions.controlType) && oControl && !oControl.bIsDestroyed; \ \ \ \ \ \ \ \ }); \ \ \ \ }; \ // \ \ \ \ var aFindElements = fnGetControlByGlobalId({ // \ \ \ \ \ \ \ \ id: new RegExp(".*sysSearchBtn.*") // \ \ \ \ }); // \ \ \ \ debugger; \ // \ \ \ \ aFindElements[0].firePress(); })

Enable JQUERY
    Execute Javascript    var headID = document.getElementsByTagName(\"head\")[0];var newScript = document.createElement('script');newScript.type='text/javascript';newScript.src='https://code.jquery.com/jquery-3.3.1.min.js';headID.appendChild(newScript);

Click element after visible and enabled
    [Arguments]    ${locator}    ${time_out}=60s
    Wait Until Element Is Visible    ${locator}    ${time_out}
    Wait Until Element Is Enabled    ${locator}    ${time_out}
    Click Element    ${locator}
    Sleep    3s

Click edit button
    Wait Until Element Is Visible    css=span[id*=osStatus-text]    timeout=90s
    Wait until element clickable and click    css=button[id*=replyBtn]

Add attachment
    [Arguments]    ${InPage}    # check add attachment in create page or edit page
    Run Keyword If    '${InPage}'=='CREATE'    Click element in incident create page    css=button[id*=addAttxBtn]
    ...    ELSE IF    '${InPage}'=='EDIT'    Wait until element clickable and click    css=button[id*=addAttxForEditBtn]
    ...    ELSE IF    '${InPage}'=='SAE'    Wait until element clickable and click    (//div[contains(@id,"AttachmentPanel")]//button)[2]
    Choose File    css=input[name="attachUpload"]    ${CURDIR}/Basic_actions.txt
    sleep    2s
    Run Keyword If    '${InPage}'=='CREATE'    Wait until element clickable and click    (//div[contains(@id,"dialog")]//button)[2]
    ...    ELSE IF    '${InPage}'=='EDIT'    Wait until element clickable and click    (//div[contains(@id,"dialog")]//button)[2]
    ...    ELSE IF    '${InPage}'=='SAE'    Wait until element clickable and click    (//div[contains(@id,"BookEdit_Edit--saeAttachmentDialog-footer")]//button)[1]
    Sleep    10s

Click element in incident create page
    [Arguments]    ${locator}    ${time_out}=20s
    Sleep    3s
    Execute Javascript    document.getElementById("__splitter0-content-1").scrollTop =1200
    Wait Until Element Is Visible    ${locator}    ${time_out}
    Wait Until Element Is Enabled    ${locator}    ${time_out}
    Click Element    ${locator}
